#grafica estor((k)/(1+k))
df=read.table('datos.txt',sep=';',header=TRUE)
View(df)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
View(LL)
install.packages('bbmle')
library(bbmle)
#setwd('.')
#df=read.table('datos.txt',sep=';',header=TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
View(df)
install.packages('bbmle')
library(bbmle)
#setwd('.')
#df=read.table('datos.txt',sep=';',header=TRUE)
df = read.csv("datos.txt" , sep = ';' , header =  TRUE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
View(df)
df = read.csv("datos.txt" , sep = ';' , header =  FALSE)
View(df)
df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
View(df)
install.packages('bbmle')
library(bbmle)
#setwd('.')
#df=read.table('datos.txt',sep=';',header=TRUE)
df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
df=read.table('datos.txt',sep=',',header=TRUE)
install.packages('bbmle')
library(bbmle)
#setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
install.packages('bbmle')
library(bbmle)
#setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
install.packages('bbmle')
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
bbmle
bbmle ?
library(bbmle)
library(bbmle)
library(bbmle)
library(bbmle)
library(bbmle)
install.packages('bbmle')
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
View(Rsol)
View(Rsol)
Rsol
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
#hacerlo de la otra forma tambienc
install.packages("bbmle")
install.packages("bbmle")
icos es
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
#hacerlo de la otra forma tambienc
install.packages("bbmle")
View(Rsol)
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
#hacerlo de la otra forma tambienc
install.packages("bbmle")
install.packages("bbmle")
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
#hacerlo de la otra forma tambienc
install.packages("bbmle")
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
#hacerlo de la otra forma tambienc
install.packages("bbmle")
summary(Rsol)
Rsol
valgraph = (kplot / (1 + kplot))
kplot=exp( -5 + 0.5 * sin((2*pi*wye$t)/12) + 0.5*cos((2*pi*wye$t)/12))
valgraph = (kplot / (1 + kplot))
plot(valgraph)
plot(WE_Prevalence)
plot(wye$WE_Prevalence)
plot(estimacionajuste)
kplot=exp( -5 + 0.5 * sin((2*pi*wye$t)/12) + 0.5*cos((2*pi*wye$t)/12))
estimacionajuste = (kplot / (1 + kplot))
plot(estimacionajuste)
plot(wye$WE_Prevalence)
install.packages('bbmle')
library(bbmle)
setwd('.')
df=read.table('datos.txt',sep=',',header=TRUE)
#df = read.csv("datos.txt" , sep = ',' , header =  FALSE)
colnames(df)
wye=df[,c(colnames(df[2:4]))]
#wye$sex=0.5
boys=df[,c(colnames(df[5:7]))]
boys$sex=1
girls=df[,c(colnames(df[8:10]))]
girls$sex=0
boys$t=seq.int(nrow(boys))
girls$t=seq.int(nrow(girls))
wye$t=seq.int(nrow(wye))
LL <- function(beta0, beta1, beta2) {
k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
R=(wye$WE_Prevalence/100000)-((k)/(1+k))
sum(abs(R))
#R retorna la suma de los rs que es lo que estoy intentando minimizar
}
Rsol=mle2(LL,start=list(beta0=-5,beta1=0.5,beta2=0.5))
Rsol
#estos valores iniciales es para que el algoritmo converja rapido , los hubiera podido poner en lo que quisiera pero quien sabe si converja y ademas no se sabe que metodo usaron los manes del paper para que el metdoo de maxima verosimilitud converijera
#Rsol
kplot=exp( -5 + 0.5 * sin((2*pi*wye$t)/12) + 0.5*cos((2*pi*wye$t)/12))
estimacionajuste = (kplot / (1 + kplot))
plot(estimacionajuste)
puntos = wye$WE_Prevalence
plot(puntos)
#cosas que debo graficar
#graficar la columna WE_prevalence
#graficar el resultado de
#k=exp(beta0 + beta1 * sin((2*pi*wye$t)/12) + beta2*cos((2*pi*wye$t)/12))
#grafica estor((k)/(1+k))
#hacerlo de la otra forma tambienc
install.packages("bbmle")
kplot=exp( -5 + 0.5 * sin((2*pi*wye$t)/12) + 0.5*cos((2*pi*wye$t)/12))
estimacionajuste = (kplot / (1 + kplot))
plot(estimacionajuste)
puntos = wye$WE_Prevalence
plot(puntos)
plot(wye$WE_Prevalence)
plot(wye$WE_Prevalence)
plot(wye$WE_Prevalence)
plot(wye$WE_Prevalence)
puntos = wye$WE_Prevalence
plot(puntos)
plot(kplot)
plot(estimacionajuste)
plot(kplot)
plot(estimacionajuste)
